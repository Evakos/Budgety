{"version":3,"sources":["webpack:///./src/js/dashboard.js"],"names":["url","fetch","method","body","JSON","stringify","data","headers","credentials","then","response","status","statusText","text","error","message","idcounter","Expense","type","amount","id","storeAmounts","budget","budgetPercent","add","accumulator","a","ctx","document","getElementById","expenseChart","Chart","datasets","backgroundColor","borderColor","options","animation","duration","easing","responsive","maintainAspectRatio","aspectRatio","animateRotate","render","UI","prototype","addExpenseToList","expense","list","row","createElement","expenseid","innerHTML","appendChild","showAlert","className","div","querySelector","createTextNode","setTimeout","remove","clearFields","value","deleteExpense","target","current","tagName","parentElement","i","length","el","splice","sum","reduce","textContent","sum1","sum2","update","addEventListener","e","typeValue","amountValue","amountNo","parseInt","expenseObj","push","ui","style","preventDefault"],"mappings":"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","file":"main.3af75d0313d619c75c88.hot-update.js","sourcesContent":["import Chart from 'chart.js';\n\n//import axios from 'axios';\n\n\n// fetch.get('localhost:3000/expense')\n//     .then(function (response) {\n//         // handle success\n//         console.log(response);\n//     })\n//     .catch(function (error) {\n//         // handle error\n//         console.log(error);\n//     })\n//     .then(function () {\n//         // always executed\n//     });\n\n\n\n//Make a request for the expense from the DB.\n\nconst url = '/expense'\n\nfetch(url, {\n    method: \"GET\",\n    body: JSON.stringify(data),\n    headers: {\n        \"Content-Type\": \"application/json\"\n    },\n    credentials: \"same-origin\"\n}).then(function (response) {\n    response.status     //=> number 100â€“599\n    response.statusText //=> String\n    response.headers    //=> Headers\n    response.url        //=> String\n\n    return response.text()\n}, function (error) {\n    error.message //=> String\n})\n\n// fetch('/expenses')\n\n//     .then(function (res) {\n\n//         const expenses = res.json;\n\n//         console.log(expenses)\n\n//         let dropdown = document.getElementById('type');\n\n//         let defaultOption = document.createElement('option');\n\n//         defaultOption.text = 'Enter Expense Type';\n\n//         defaultOption.value = '';\n\n//         dropdown.add(defaultOption);\n\n//         expenses.forEach(function (element) {\n\n//             dropdown.options[dropdown.options.length] = new Option(element.content);\n\n//         });\n//     })\n\n//     .catch(function (error) {\n\n//         console.log(error);\n//     })\n//     .finally(function () {\n\n//         console.log('Got the Expenses Object:');\n//     });\n\n\n\n\n\nlet idcounter = 0;\n\n// Expense Constructor to be reusable.\n\nfunction Expense(type, amount) {\n\n    // type variable will contain \"Groceries\"\n    // amount variable will contain 9.99\n\n    this.type = type;\n\n    this.amount = amount;\n\n    this.id = idcounter++;\n\n}\n\n// Expense.prototype.show = function () {\n//   console.log(this.amount);\n// }\n\n// let expense = new Expense(\"Children\", \"100\");\n// expense.show()\n// let expense2 = new Expense(\"Groceries\", \"200\");\n// expense2.show();\n\n// let expense = {\n//    type: \"\",\n//    amount: 0,\n//    id: 0,\n//    setProperties: function(type, amount) {\n//      this.type = type;\n//      this.amount = amount;\n//      this.id = idcounter++;\n//}\n// }\n\n//Global Vars\n\nlet storeAmounts = [];\n\nlet budget = 1600; //We will get this on input in the UI.\n\nlet budgetPercent = (budget / budget) * 100; //Return as a percent don't really need this.\n\n/// Need this exaplining still\nfunction add(accumulator, a) {\n\n    return accumulator + a.amount;\n\n}\n\nconst ctx = document.getElementById('chart');\n\nlet expenseChart = new Chart(ctx, {\n\n\n    type: 'doughnut',\n    data: {\n        datasets: [\n            {\n                backgroundColor: ['rgba(0, 0, 0, .05)', 'rgba(0, 0, 0, .05)'],\n                data: [100, 100]\n            }\n        ],\n\n        borderColor: ['rgba(233, 255, 255, 1)']\n    },\n    options: {\n        animation: {\n            duration: 1000,\n            easing: 'linear'\n        },\n        responsive: false,\n        maintainAspectRatio: false,\n        aspectRatio: 1,\n\n        animation: {\n            animateRotate: true,\n            render: false,\n        },\n    }\n});\n\n//Empty UI Constructor\n\nfunction UI() { }\n\n// Add Expense To List:\n\nUI.prototype.addExpenseToList = function (expense) {\n\n    const list = document.getElementById('expense-list');\n\n    const row = document.createElement('tr');\n\n    row.expenseid = expense.id;  // Where is the id being added though. Not physically.\n\n    row.innerHTML = `\n    \n    <td>${expense.type}</td>\n\n    <td>${expense.amount}</td>\n\n    `;\n\n    list.appendChild(row);\n};\n\n// Show Alert\n\nUI.prototype.showAlert = function (message, className) {\n\n    const div = document.createElement('div');\n\n    document.querySelector('.messages').appendChild(div);\n\n    div.appendChild(document.createTextNode(message));\n\n    div.className = `alert ${className}`;// Add classes\n\n    setTimeout(function () { // Timeout after 3 sec\n\n        document.querySelector('.alert').remove();\n\n    }, 2500);\n\n};\n\n// Clear Fields\n\nUI.prototype.clearFields = function () {\n\n    document.getElementById('type').value = '';\n\n    document.getElementById('amount').value = '';\n};\n\n\n// Delete Entry\n\nUI.prototype.deleteExpense = function (target) {\n\n    let current = target;\n\n    while (current.tagName != 'TR') {\n\n        current = current.parentElement;\n\n    }\n\n    //console.log(current.expenseid);\n\n    for (let i = storeAmounts.length - 1; i >= 0; i--) {\n\n        let el = storeAmounts[i];\n\n        if (el.id == current.expenseid) {\n\n            storeAmounts.splice(i, 1);\n\n        }\n\n    }\n\n    const sum = storeAmounts.reduce(add, 0); //Initalise\n\n    document.getElementById('sum').textContent = sum;\n\n    current.remove();\n\n\n\n\n    let sum1 = (sum / budget) * 100; //Expenense as a percentage of the budget\n\n    let sum2 = budgetPercent + sum1;\n\n    expenseChart.data.datasets[0].data = [sum1, sum2];\n\n    expenseChart.data.datasets[0].backgroundColor = ['rgba(255, 102, 153, 1)'];\n\n    expenseChart.update();\n\n};\n\n// Event Listener for add expense\ndocument.querySelector('.button').addEventListener('click', function (e) {\n\n    //console.log('clikced');\n\n    // Get form values, don't need to repeat the const.\n    const typeValue = document.getElementById('type').value, amountValue = document.getElementById('amount').value;\n\n    // Instantiate expense this is from the expense object in line 1\n    // by using the new keyword, the Expense (constructor) function will be called like every other function, but all the variables declaredas this.variablename will be attached\n    // to the new Expense object (called expense) so you can later access those variables as expense.variablename as properties of the expense object\n\n    // example: Let' say we selected \"Groceries\" for typeValue and 9.99 for the amount\n    const expense = new Expense(typeValue, amountValue);\n\n    // console.log(expense);\n\n    let amountNo = parseInt(amountValue);\n\n    let expenseObj = {\n\n        amount: amountNo,\n\n        id: expense.id\n\n    };\n\n    storeAmounts.push(expenseObj);\n\n    //Initalise\n\n    const sum = storeAmounts.reduce(add, 0);\n\n    document.getElementById('sum').textContent = sum;\n\n    // Update Chart\n\n    let sum1 = (sum / budget) * 100; //Expenense as a percentage of the budget\n\n    let sum2 = budgetPercent - sum1;\n\n    expenseChart.data.datasets[0].data = [sum1, sum2];\n\n    expenseChart.data.datasets[0].backgroundColor = ['rgba(255, 102, 153, 1)'];\n\n    expenseChart.update();\n\n    // Instantiate UI\n\n    const ui = new UI();\n\n    // Validate\n\n    if (amountValue === '' || typeValue === '') {\n\n        document.querySelector('.messages').style.backgroundColor = 'salmon';\n\n        // Error alert\n        ui.showAlert(' Please fill in all fields', 'error');\n\n    } else {\n\n        // Add expense to list\n        ui.addExpenseToList(expense);\n\n        // Show success\n        document.querySelector('.messages').style.backgroundColor = '#c5e2d9';\n\n        ui.showAlert(' Expense Added', 'success');\n\n        // Clear fields\n        ui.clearFields();\n    }\n\n    //console.log(storeAmounts);\n\n    e.preventDefault();\n\n});\n\n\n\n// Event Listener for delete\n\ndocument.getElementById('expense-list').addEventListener('click', function (e) {\n    // Instantiate UI\n    const ui = new UI();\n\n    // Delete Expense\n    ui.deleteExpense(e.target);\n\n    // Show message\n    ui.showAlert(' Expense Removed', 'success');\n\n    // Show Totals\n    //updateTotals();\n\n    e.preventDefault();\n});\n\n\n\n\n//Populate Drop Down\n\n\n\n// let dropdown = document.getElementById('type');\n\n// dropdown.length = 0;\n\n// let defaultOption = document.createElement('option');\n\n// defaultOption.text = 'Enter Expense Type';\n\n// defaultOption.value = '';\n\n// dropdown.add(defaultOption);\n\n// dropdown.selectedIndex = 0;\n\n// let option;\n\n// for (let i = 0; i < expenses.length; i++) {\n\n//     //console.log(response);\n\n//     option = document.createElement('option');\n\n//     option._id = expenses[i].type;\n\n//     option.name = expenses[i].type;\n\n//     dropdown.add(option);\n\n// }\n\n\n\n\n\n\n\n\n"],"sourceRoot":""}