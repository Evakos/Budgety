{"version":3,"sources":["components/Note.js","components/Notification.js","components/Footer.js","services/notes.js","App.js","index.js"],"names":["Note","_ref","note","toggleImportance","label","important","react_default","a","createElement","className","content","onClick","Notification","message","Footer","style","color","fontStyle","fontSize","services_notes","request","axios","get","nonExisting","id","date","then","response","data","concat","newObject","post","put","App","_useState","useState","_useState2","Object","slicedToArray","notes","setNotes","_useState3","_useState4","newNote","setNewNote","_useState5","_useState6","showAll","setShowAll","_useState7","_useState8","errorMessage","setErrorMessage","useEffect","noteService","initialNotes","notesToShow","filter","toggleImportanceOf","find","n","changedNote","objectSpread","returnedNote","map","catch","error","setTimeout","components_Notification","components_Note","key","onSubmit","event","preventDefault","noteObject","Date","toISOString","Math","random","length","value","onChange","target","type","components_Footer","ReactDOM","render","src_App","document","getElementById"],"mappings":"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","file":"static/js/main.f396e70a.chunk.js","sourcesContent":["import React from 'react'\n\nconst Note = ({ note, toggleImportance }) => {\n  const label = note.important\n    ? 'make not important' : 'make important'\n\n  return (\n    <li className='note'>\n      {note.content}\n      <button onClick={toggleImportance}>{label}</button>\n    </li>\n  )\n}\n\nexport default Note","import React from 'react'\n\nconst Notification = ({ message }) => {\n  if (message === null) {\n    return null\n  }\n\n  return (\n    <div className=\"error\">\n      {message}\n    </div>\n  )\n}\n\nexport default Notification ","import React from 'react'\n\nconst Footer = () => {\n  const footerStyle = {\n    color: 'green',\n    fontStyle: 'italic',\n    fontSize: 16\n  }\n\n  return (\n    <div style={footerStyle}>\n      <br />\n      <em>Note app, Department of Computer Science, University of Helsinki 2019</em>\n    </div>\n  )\n}\n\nexport default Footer ","import axios from 'axios'\nconst baseUrl = '/api/notes'\n\nconst getAll = () => {\n  const request = axios.get(baseUrl)\n  const nonExisting = {\n    id: 10000,\n    content: 'This note is not saved to server',\n    date: '2019-05-30T17:30:31.098Z',\n    important: true,\n  }\n  return request.then(response => response.data.concat(nonExisting))\n}\n\nconst create = newObject => {\n  const request = axios.post(baseUrl, newObject)\n  return request.then(response => response.data)\n}\n\nconst update = (id, newObject) => {\n  const request = axios.put(`${baseUrl}/${id}`, newObject)\n  return request.then(response => response.data)\n}\n\nexport default { getAll, create, update }","import React, { useState, useEffect } from 'react'\nimport Note from './components/Note'\nimport Notification from './components/Notification'\nimport Footer from './components/Footer'\nimport noteService from './services/notes' \n\nconst App = () => {\n  const [notes, setNotes] = useState([]) \n  const [newNote, setNewNote] = useState('') \n  const [showAll, setShowAll] = useState(true)\n  const [errorMessage, setErrorMessage] = useState(null)\n\n  useEffect(() => {\n    noteService\n      .getAll()\n      .then(initialNotes => setNotes(initialNotes))\n  }, [])\n\n  const notesToShow = showAll\n    ? notes\n    : notes.filter(note => note.important)\n\n  const rows = () => notesToShow.map(note =>\n    <Note\n      key={note.id}\n      note={note}\n      toggleImportance={() => toggleImportanceOf(note.id)}\n    />\n  )\n  \n  const handleNoteChange = (event) => {\n    setNewNote(event.target.value)\n  }\n\n  const addNote = (event) => {\n    event.preventDefault()\n    const noteObject = {\n      content: newNote,\n      date: new Date().toISOString(),\n      important: Math.random() > 0.5,\n      id: notes.length + 1,\n    }\n\n    noteService\n      .create(noteObject)\n      .then(data => {\n        setNotes(notes.concat(data))\n        setNewNote('')\n      })\n  }\n\n  const toggleImportanceOf = id => {\n    const note = notes.find(n => n.id === id)\n    const changedNote = { ...note, important: !note.important }\n\n    noteService\n      .update(id, changedNote)\n      .then(returnedNote => {\n        setNotes(notes.map(note => note.id !== id ? note : returnedNote))\n      })\n      .catch(error => {\n        setErrorMessage(\n          `Note '${note.content}' was already removed from server`\n        )\n        setTimeout(() => {\n          setErrorMessage(null)\n        }, 5000)\n        setNotes(notes.filter(n => n.id !== id))\n      })\n      \n  }\n\n  return (\n    <div>\n      <h1>Notes</h1>\n\n      <Notification message={errorMessage} />\n\n      <div>\n        <button onClick={() => setShowAll(!showAll)}>\n          show {showAll ? 'important' : 'all'}\n        </button>\n      </div>\n      <ul>\n        {rows()}\n      </ul>\n      <form onSubmit={addNote}>\n        <input\n          value={newNote} \n          onChange={handleNoteChange}\n        />\n        <button type=\"submit\">save</button>\n      </form>\n\n      <Footer />\n    </div>\n  )\n}\n\nexport default App ","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport App from './App'  \nimport './index.css'\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root')\n)"],"sourceRoot":""}